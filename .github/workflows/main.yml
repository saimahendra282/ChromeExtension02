name: Auto Tag, Release, and Update README

on:
  push:
    branches:
      - main  # Only trigger on code commits to main

jobs:
  tag-and-release:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.tag.outputs.new_tag }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Set up Git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Get latest version and bump patch
        id: tag
        run: |
          LATEST_TAG=$(git tag --sort=-v:refname | grep '^v' | head -n 1)

          if [ -z "$LATEST_TAG" ]; then
            LATEST_TAG="v2.0.7"
          fi

          IFS='.' read -r MAJOR MINOR PATCH <<< "${LATEST_TAG#v}"
          PATCH=$((PATCH + 1))
          NEW_TAG="v$MAJOR.$MINOR.$PATCH"

          echo "New tag: $NEW_TAG"
          git tag "$NEW_TAG"
          git push origin "$NEW_TAG"

          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: Read release title and notes from file
        id: release_content
        run: |
          TITLE=$(head -n 1 release-notes.txt)
          BODY=$(tail -n +2 release-notes.txt)

          echo "title=$TITLE" >> $GITHUB_OUTPUT
          echo "body<<EOF" >> $GITHUB_OUTPUT
          echo "$BODY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.new_tag }}
          name: ${{ steps.release_content.outputs.title }}
          body: ${{ steps.release_content.outputs.body }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

  update-readme:
    needs: tag-and-release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout with PAT
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Update README with new version
        run: |
          TAG=${{ needs.tag-and-release.outputs.new_tag }}

          # Update ZIP download link
          ZIP_REGEX='https:\/\/github\.com\/saimahendra282\/ChromeExtension02\/archive\/refs\/tags\/v[0-9]+\.[0-9]+\.[0-9]+\.zip'
          NEW_ZIP="https://github.com/saimahendra282/ChromeExtension02/archive/refs/tags/$TAG.zip"
          sed -i -E "s|$ZIP_REGEX|$NEW_ZIP|g" README.md

          # Update badge URL
          BADGE_REGEX='https:\/\/img\.shields\.io\/badge\/Download_Extension-v[0-9]+\.[0-9]+\.[0-9]+-green'
          NEW_BADGE="https://img.shields.io/badge/Download_Extension-${TAG}-green"
          sed -i -E "s|$BADGE_REGEX|$NEW_BADGE|g" README.md

      - name: Commit and push updated README
        run: |
          git pull origin main
          if git diff --quiet; then
            echo "README already up to date."
          else
            git add README.md
            git commit -m "Update README with release: ${{ needs.tag-and-release.outputs.new_tag }}"
            git push https://x-access-token:${{ secrets.GH_PAT }}@github.com/saimahendra282/ChromeExtension02.git HEAD:main
